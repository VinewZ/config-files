{
	"styledComponents": {
		"prefix": "str",
		"body": [
			"import styled from 'styled-components';",
			"",
			"export const ${1:Container} = styled.${2:div}`",
			"  ${3}",
			"`;",
			""
		],
		"description": "Create ReactJS Styled Components file"
		},
		"functionComponentTsx": {
    "prefix": "rfc",
		"body": [
			"import React from 'react';",
			"",
			"export function ${1:${TM_DIRECTORY/^.*(\\/|\\\\)([^(\\/|\\\\)]+)$/$2/}}() {",
			"  return (",
			"  <${3:div}>",
			"    ${4}",
			"  </${3:div}>",
			"  );",
			"}",
		],
		"description": "Create ReactJS Functional Component Typescript"
		},
		"createReactContext": {
    "prefix": "rcc",
		"body": [
			"import { createContext, ReactNode } from 'react';",
			"",
			"type ${1:$TM_FILENAME_BASE}ProviderType = {",
			"  children: ReactNode",
			"}",
			"",
			"type ${1:$TM_FILENAME_BASE}ContextType = {",
			"  ",
			"}",
			"",
			"const ${1:$TM_FILENAME_BASE}Context = createContext<${1:$TM_FILENAME_BASE}ContextType>({})",
			"",
			"export function ${1:$TM_FILENAME_BASE}Provider({children}: ${1:$TM_FILENAME_BASE}ProviderType) {",
			"",
			"  ${2}",
			"",
			"  return (",
			"    <${1:$TM_FILENAME_BASE}Context.Provider value={{}}>",
			"      {children}",
			"    </${1:$TM_FILENAME_BASE}Context.Provider>",
			"  );",
			"}",
		],
		"description": "Create ReactJS Context"
		},
		"reactUseState": {
    "prefix": "rus",
		"body": [
			"const [${1:}, set${1/(.*)/${1:/capitalize}/}] = useState()",
		],
		"description": "Create ReactJS useState"
		},
		"reactUseEffect": {
    "prefix": "rue",
		"body": [
			"useEffect(() => {",
			"  ${1}",
			"}, [])",
		],
		"description": "Create ReactJS useState"
	},
}